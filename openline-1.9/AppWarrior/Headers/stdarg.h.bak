#ifndef va_endtypedef char *va_list;#if __INTEL__					// The arguments are passed on the stack with an alignment of four	#ifndef __va_start	#define __va_start(parm)	(va_list) ((long)(&parm) + \								((((long)(&parm + 1) - (long)(&parm))+3)/4*4))	#endif#else	#ifndef __va_start	#define __va_start(parm)	(va_list) (&parm + 1)	#endif#endif#define va_start(ap, parm)		ap = __va_start(parm)#define va_end(ap)#if __INTEL__	#define _Align(type, mask)	(sizeof(type) + (mask) & ~(mask))	#define va_arg(ap, type)	(* (type *) (((ap) += _Align(type, 3)) - _Align(type, 3)))#elif __POWERPC__ && macintosh	// for PowerMac 32bit calling conventions only	#ifndef va_arg	#define va_arg(ap, type)	(* (((type *) (ap += (((sizeof(type)+3)/4)*4) )) -1) )	#endif#else	#define va_arg(ap, type)	(* (((type *) (ap += sizeof(type))) - 1) )#endif#endif